#version 460
#extension GL_EXT_nonuniform_qualifier : enable
#extension GL_EXT_scalar_block_layout : enable
#extension GL_GOOGLE_include_directive : enable
#extension GL_EXT_debug_printf : enable
#extension GL_EXT_shader_explicit_arithmetic_types_int64 : require
#extension GL_EXT_buffer_reference2 : require
#extension GL_EXT_shader_atomic_float : require
#include "surfel.h"

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

// Buffers (set = 0)
layout(set = 0, binding = 0) buffer _SurfelStats {
    SurfelStats surfelStats;
};

// Indirect dispatch arguments buffer
layout(set = 0, binding = 1) buffer _IndirectBuffer {
    // Binning dispatch
    ivec3 iteration_dim;
	ivec3 ray_trace_dim;
	ivec3 integrate_dim;
} indirectBuffer;

void main() {
    // 获取当前surfel数量
    surfelStats.surfelCount = surfelStats.surfelNextcount;
	// 重置下一帧的surfel数量
	surfelStats.surfelNextcount = 0;
	// 重置死亡的surfel数量
	int deadcount = surfelStats.surfelDeadcount;
	int shortage = max(0,-deadcount);
	deadcount = clamp(deadcount,0,SURFEL_CAPACITY);

	surfelStats.surfelDeadcount = deadcount;
	surfelStats.surfelShortage = shortage;
	surfelStats.surfelRaycount = 0;
	surfelStats.surfelCellAllocator = 0;

	
	debugPrintfEXT("surfelCount:%d,deadcount:%d,shortage:%d\n",surfelStats.surfelCount,deadcount,shortage);

	int rayCount = surfelStats.surfelRaycount;

	int surfel_count = surfelStats.surfelCount;
	indirectBuffer.iteration_dim = ivec3((surfel_count + SURFEL_INDIRECT_NUMTHREADS) / SURFEL_INDIRECT_NUMTHREADS, 1, 1);
	indirectBuffer.ray_trace_dim = ivec3((rayCount + SURFEL_INDIRECT_NUMTHREADS) / SURFEL_INDIRECT_NUMTHREADS, 1, 1);
	indirectBuffer.integrate_dim = ivec3(surfel_count, 1, 1);
}
